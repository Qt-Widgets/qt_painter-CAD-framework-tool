cmake_minimum_required (VERSION 3.0)
project (painter)

set(CMAKE_AUTOMOC ON)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/.tmp/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/.tmp/lib)

if (WIN32) 
	set(CMAKE_PREFIX_PATH ${QTDIR})
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin/windows/)
	if (MSVC)
		set(QTDIR "C:\\Programs\\Qt\\5.11.1")
	else()
		set(QTDIR "./ext/mingw73_32")
	endif(MSVC)
else()
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin/linux/)
endif (WIN32)

if (UNIX)
	set ( CMAKE_CXX_FLAGS "-g -fPIC -Wunused-parameter -pipe -std=gnu++17 -frtti -Wall -Wextra -fexceptions -pthread -Wno-unused-function -Wno-unused-variable")
endif (UNIX)

find_package (Qt5Widgets)
find_package (Qt5Core)
find_package (Qt5Gui)
find_package (Qt5Svg)
find_package (Qt5Xml)

set(CMAKE_CXX_STANDARD 17)

#if (MSVC)
#	set(CMAKE_CXX_STANDARD 17)
#endif (MSVC)

if (UNIX)
	include_directories(/usr/include/i386-linux-gnu/qt5)
	include_directories(/usr/include/i386-linux-gnu/qt5/QtWidgets)
	include_directories(/usr/include/i386-linux-gnu/qt5/QtCore)
	include_directories(/usr/include/i386-linux-gnu/qt5/QtGui)
else ()
	include_directories(${QTDIR}/include)
	include_directories(${QTDIR}/include/QtCore)
	include_directories(${QTDIR}/include/QtGui)
	include_directories(${QTDIR}/include/QtWidgets)
endif (UNIX)

add_subdirectory (${PROJECT_SOURCE_DIR}/src/io)
add_subdirectory (${PROJECT_SOURCE_DIR}/src/core/rq)
add_subdirectory (${PROJECT_SOURCE_DIR}/src/core)
add_subdirectory (${PROJECT_SOURCE_DIR}/src/commands)
add_subdirectory (${PROJECT_SOURCE_DIR}/src/gui)

add_executable(painter ${PROJECT_SOURCE_DIR}/src/main.cpp )
add_dependencies(painter rq	io core commands gui )
target_link_libraries (painter gui rq io core commands rq Qt5::Widgets Qt5::Core Qt5::Gui Qt5::Svg Qt5::Xml)